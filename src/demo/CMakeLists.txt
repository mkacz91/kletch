message(STATUS "Creating demo executable target: kletch")

find_package(GLFW3 REQUIRED)
find_package(OpenGL REQUIRED)
find_package(AntTweakBar REQUIRED)

# OpenGL headers generated by glad

set(GLAD_DIR "${CMAKE_BINARY_DIR}/glad")
set(GLAD_H "${GLAD_DIR}/include/glad/glad.h")
set(GLAD_C "${GLAD_DIR}/src/glad.c")
add_custom_command(
  OUTPUT "${GLAD_H}" "${GLAD_C}"
  COMMAND echo hello && python -m glad --out-path "${GLAD_DIR}"
    --generator=c --no-loader --api gl=2.1 --spec gl --extensions=)

# Generated shader assets

set(SHADER_ASSET_DIR "${CMAKE_BINARY_DIR}/assets/shaders")
file(MAKE_DIRECTORY "${SHADER_ASSET_DIR}")
file(GLOB SHADER_SOURCES "shaders/*.glsl")
foreach(SHADER_SOURCE ${SHADER_SOURCES})
  get_filename_component(SHADER_NAME "${SHADER_SOURCE}" NAME_WE)
  set(SHADER_ASSET "${SHADER_ASSET_DIR}/${SHADER_NAME}.ass")
  list(APPEND KLETCH_ASSETS "${SHADER_ASSET}")
  add_custom_command(
    OUTPUT "${SHADER_ASSET}"
    COMMAND python "${ASSC}" "${SHADER_SOURCE}" -o "${SHADER_ASSET}"
    MAIN_DEPENDENCY "${SHADER_SOURCE}"
    WORKING_DIRECTORY "${CMAKE_BINARY_DIR}")
endforeach(SHADER_SOURCE)

# Executable 'kletch'

message(STATUS "GLFW3_INCLUDE_DIR: ${GLFW3_INCLUDE_DIR}")
include_directories(
  ../
  ${GLFW3_INCLUDE_DIR}
  ${OPENGL_INCLUDE_DIR}
  ${ANTTWEAKBAR_INCLUDE_DIR}
  ${GLAD_DIR}/include
)

file(GLOB KLETCH_SOURCES *.cpp *.h)
list(APPEND KLETCH_SOURCES "${GLAD_C}" "${GLAD_H}")

if (APPLE)
  #list(APPEND KLETCH_SOURCES SDLMain/SDLMain.m)
endif (APPLE)

add_executable(kletch ${KLETCH_SOURCES} ${KLETCH_ASSETS})
target_link_libraries(kletch
  libkletch
  libasset
  ${GLFW3_LIBRARY}
  ${OPENGL_gl_LIBRARY}
  ${ANTTWEAKBAR_LIBRARY}
)
